{
  "posts": [
    {
      "id": 1,
      "title": "json-server",
      "userId": 1
    },
    {
      "id": 2,
      "title": "json-server",
      "userId": 2
    }
  ],
  "comments": [
    {
      "id": "5",
      "text": "some comment",
      "articleId": "2",
      "userId": "1"
    },
    {
      "id": "6",
      "text": "some comment 2",
      "articleId": "2",
      "userId": "2"
    },
    {
      "id": "7",
      "text": "some comment 3",
      "articleId": "2",
      "userId": "2"
    },
    {
      "text": "JAVASCRIPT",
      "id": "67625",
      "articleId": "1",
      "userId": "2"
    },
    {
      "text": "PITON",
      "id": "49840",
      "articleId": "2",
      "userId": "2"
    },
    {
      "text": "piton2",
      "id": "02158",
      "articleId": "2",
      "userId": "1"
    },
    {
      "text": "sass",
      "id": "14491",
      "articleId": "1",
      "userId": "1"
    },
    {
      "text": "New comments",
      "id": "48309",
      "articleId": "1",
      "userId": "1"
    },
    {
      "text": "fdWEFQAEWFQAWEFQAW",
      "id": "65974",
      "articleId": "1",
      "userId": "2"
    },
    {
      "id": "QS_BL3h"
    },
    {
      "text": "ADD PITON",
      "id": "86925",
      "articleId": "2",
      "userId": "1"
    },
    {
      "text": "TEST COMMENT",
      "id": "73155",
      "articleId": "1",
      "userId": "2"
    },
    {
      "text": "dwdwdqd",
      "id": "65424",
      "articleId": "3",
      "userId": "2"
    },
    {
      "text": "ЗРОБИВ!!!",
      "id": "58354",
      "articleId": "2",
      "userId": "2"
    }
  ],
  "users": [
    {
      "id": 1,
      "username": "admin",
      "password": "123",
      "avatar": "https://byuc.wordpress.com/wp-content/uploads/2012/07/avat-2.jpg"
    },
    {
      "id": 2,
      "username": "multik",
      "password": "5555",
      "avatar": "https://ivanetsvictor.site/img/My_foto.png"
    }
  ],
  "profile": [
    {
      "id": "1",
      "first": "Admin",
      "lastname": "Newman",
      "age": "35",
      "currency": "EUR",
      "country": "Ukraine",
      "city": "Kyiv",
      "username": "MASTER",
      "avatar": "https://byuc.wordpress.com/wp-content/uploads/2012/07/avat-2.jpg"
    },
    {
      "id": "2",
      "first": "Victor",
      "lastname": "Ivanets",
      "age": "44",
      "currency": "UAH",
      "country": "Ukraine",
      "city": "Житомир",
      "username": "MULTIK",
      "avatar": "https://ivanetsvictor.site/img/My_foto.png"
    }
  ],
  "news": [
    {
      "id": "1",
      "title": "JavaScript",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://ivanetsvictor.site/img/fotoIVD-04_V2_REACT.jpg",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "8",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "Last block",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "2",
      "title": "Piton",
      "subtitle": "Piton555",
      "img": "https://ivanetsvictor.site/img/fotoIVD-07_V2.jpg",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "8",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "3",
      "title": "C++ or C#",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://habrastorage.org/getpro/habr/upload_files/8a4/ba9/fec/8a4ba9fece64df495770fc9a5bcd1300.png",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "8",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "Last block",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "4",
      "title": "TypeScript",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://miro.medium.com/v2/resize:fit:1358/1*moJeTvW97yShLB7URRj5Kg.png",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;"
        },
        {
          "id": "5",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "2",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "3",
          "type": "CODE",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);"
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ]
        },
        {
          "id": "8",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "Last block",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ]
        }
      ]
    },
    {
      "id": "5",
      "title": "JavaScript NEWS",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://codewithcurious.com/wp-content/uploads/2024/02/thumbnail-1.png",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "JavaScript NEWS NEWS2",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://www.freecodecamp.org/news/content/images/2023/11/What-s-new.png",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "Pitons NEWS NEWS2",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://futurenow.com.ua/wp-content/uploads/2020/08/shho-take-python-piton-perevagy-programuvannya-na-python.jpg",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        }
      ]
    },
    {
      "id": "7",
      "title": "SQL NEWS",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://severalnines.com/wp-content/uploads/2023/12/BLOG-Whats-new-in-SQL-Server-2022.png",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        }
      ]
    },
    {
      "id": "8",
      "title": "SQL TEST",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://habrastorage.org/webt/hh/ac/ed/hhacedu8okr3jeoi0i2awmpptyq.jpeg",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        }
      ]
    },
    {
      "id": "9",
      "title": "MONGO TEST",
      "subtitle": "Нові рішеня у програмуванні",
      "img": "https://www.openlogic.com/sites/default/files/image/2021-06/image-blog-openlogic-what-is-mongodb.png",
      "views": 352,
      "createdAt": "10.06.2024",
      "type": [
        "IT",
        "SIENCE"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Заголовок этого блока",
          "paragraphs": [
            "Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки.",
            "У свою чергу, web-додаток – клієнт-серверний додаток, в якому клієнтом виступає в основному браузер, а сервером – web-сервер. Логіка web-додатку розподілена між сервером і клієнтом, зберігання даних здійснюється переважно на сервері, обмін інформацією відбувається у мережі. Простіше кажучи, це те, що бачить користувач і які дії виконує кожен раз, коли підключається до мережі інтернет і відкриває будь-який браузер.",
            "Frontend розробка – це робота зі створення публічної частини web-додатку, з  якою безпосередньо контактує користувач, і функціоналу, який зазвичай  виконується на стороні клієнта. Тобто, фронтенд розробник працює над тим,  щоб на сайті кожна кнопочка, іконка, текст і вікно не тільки стояли на своєму місці, не перекривали один одного і виглядали цілісно (це   веб-верстка), але і щоб вони виконували своє пряме призначення – підштовхували до якоїсь дії (наприклад, щоб кнопка “купити” відкривала кошик, а “play” – запускала відтворення фільму або музики).",
            "З метою створення затребуваного і доступного продукту (веб-додатки)  фронтенд-розробнику необхідно взаємодіяти з іншими програмістами,  дизайнерами, маркетологами, аналітиками та іншими фахівцями."
          ]
        }
      ]
    }
  ]
}